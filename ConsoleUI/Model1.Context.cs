//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleUI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Model1Container : DbContext
    {
        public Model1Container()
            : base("name=Model1Container")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FakturaNummer> FakturaNummer { get; set; }
        public virtual DbSet<Kontigent> Kontigent { get; set; }
        public virtual DbSet<MedlemKonto> MedlemKonto { get; set; }
        public virtual DbSet<PostNummer> PostNummer { get; set; }
    
        public virtual int spBetalt(Nullable<int> betaltID, Nullable<bool> betalt)
        {
            var betaltIDParameter = betaltID.HasValue ?
                new ObjectParameter("betaltID", betaltID) :
                new ObjectParameter("betaltID", typeof(int));
    
            var betaltParameter = betalt.HasValue ?
                new ObjectParameter("betalt", betalt) :
                new ObjectParameter("betalt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBetalt", betaltIDParameter, betaltParameter);
        }
    
        public virtual int spOpretMedlem(string fornavn, string efternavn, string foedselsdag, string adress, Nullable<int> postnummer, Nullable<int> telefon, string mail)
        {
            var fornavnParameter = fornavn != null ?
                new ObjectParameter("fornavn", fornavn) :
                new ObjectParameter("fornavn", typeof(string));
    
            var efternavnParameter = efternavn != null ?
                new ObjectParameter("efternavn", efternavn) :
                new ObjectParameter("efternavn", typeof(string));
    
            var foedselsdagParameter = foedselsdag != null ?
                new ObjectParameter("foedselsdag", foedselsdag) :
                new ObjectParameter("foedselsdag", typeof(string));
    
            var adressParameter = adress != null ?
                new ObjectParameter("adress", adress) :
                new ObjectParameter("adress", typeof(string));
    
            var postnummerParameter = postnummer.HasValue ?
                new ObjectParameter("postnummer", postnummer) :
                new ObjectParameter("postnummer", typeof(int));
    
            var telefonParameter = telefon.HasValue ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOpretMedlem", fornavnParameter, efternavnParameter, foedselsdagParameter, adressParameter, postnummerParameter, telefonParameter, mailParameter);
        }
    
        public virtual int spRetMedlem(Nullable<int> medlemID, string fornavn, string efternavn, string adress, Nullable<int> postnummer, Nullable<int> telefon, string mail)
        {
            var medlemIDParameter = medlemID.HasValue ?
                new ObjectParameter("medlemID", medlemID) :
                new ObjectParameter("medlemID", typeof(int));
    
            var fornavnParameter = fornavn != null ?
                new ObjectParameter("fornavn", fornavn) :
                new ObjectParameter("fornavn", typeof(string));
    
            var efternavnParameter = efternavn != null ?
                new ObjectParameter("efternavn", efternavn) :
                new ObjectParameter("efternavn", typeof(string));
    
            var adressParameter = adress != null ?
                new ObjectParameter("adress", adress) :
                new ObjectParameter("adress", typeof(string));
    
            var postnummerParameter = postnummer.HasValue ?
                new ObjectParameter("postnummer", postnummer) :
                new ObjectParameter("postnummer", typeof(int));
    
            var telefonParameter = telefon.HasValue ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRetMedlem", medlemIDParameter, fornavnParameter, efternavnParameter, adressParameter, postnummerParameter, telefonParameter, mailParameter);
        }
    
        public virtual int spSletMedlem(Nullable<int> medlemID)
        {
            var medlemIDParameter = medlemID.HasValue ?
                new ObjectParameter("medlemID", medlemID) :
                new ObjectParameter("medlemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSletMedlem", medlemIDParameter);
        }
    
        public virtual ObjectResult<spSoegMedlem_Result> spSoegMedlem(string soegmedlem)
        {
            var soegmedlemParameter = soegmedlem != null ?
                new ObjectParameter("soegmedlem", soegmedlem) :
                new ObjectParameter("soegmedlem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSoegMedlem_Result>("spSoegMedlem", soegmedlemParameter);
        }
    
        public virtual ObjectResult<spViewBetalt_Result> spViewBetalt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spViewBetalt_Result>("spViewBetalt", idParameter);
        }
    
        public virtual ObjectResult<spViewFaktura_Result> spViewFaktura(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spViewFaktura_Result>("spViewFaktura", idParameter);
        }
    
        public virtual ObjectResult<spViewKonto_Result> spViewKonto(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spViewKonto_Result>("spViewKonto", idParameter);
        }
    }
}
